// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItem component renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "fontSize": 18,
        "justifyContent": "space-between",
        "marginBottom": 15,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "flexShrink": 1,
        }
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 24,
              "width": "100%",
            },
            false,
          ]
        }
      >
        Test Task
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "marginLeft": 10,
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          {
            "busy": undefined,
            "checked": false,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "borderColor": "#657786",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "width": 20,
            },
            {
              "height": 25,
              "width": 25,
            },
            false,
            false,
            undefined,
            false,
          ]
        }
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "marginLeft": 7,
            "marginRight": 7,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={30}
          bbWidth={30}
          fill="none"
          focusable={false}
          height={30}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 30,
                "width": 30,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={30}
          xmlns="http://www.w3.org/2000/svg"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              clipRule={0}
              d="m8.56 20.25 12-12-4.81-4.81-12 12v4.81h4.81Zm7.19-14.69 2.69 2.69-1.94 1.94-2.69-2.69 1.94-1.94Zm-3 3 2.69 2.69-7.5 7.5H5.25v-2.69l7.5-7.5Z"
              fill={
                {
                  "payload": 4278715201,
                  "type": 0,
                }
              }
              fillRule={0}
              propList={
                [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={25}
          bbWidth={25}
          focusable={false}
          height={25}
          meetOrSlice={0}
          minX={0}
          minY={-0.5}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 25,
                "width": 25,
              },
            ]
          }
          vbHeight={21}
          vbWidth={21}
          width={25}
          xmlns="http://www.w3.org/2000/svg"
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          >
            <RNSVGPath
              d="M7.35 16h2.1V8h-2.1v8Zm4.2 0h2.1V8h-2.1v8Zm-6.3 2h10.5V6H5.25v12Zm2.1-14h6.3V2h-6.3v2Zm8.4 0V0H5.25v4H0v2h3.15v14h14.7V6H21V4h-5.25Z"
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              fillRule={0}
              propList={
                [
                  "fill",
                  "fillRule",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;
